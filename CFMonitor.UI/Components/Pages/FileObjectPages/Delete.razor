@page "/fileobjects/delete"
@using Microsoft.EntityFrameworkCore
@using CFMonitor.Interfaces
@using CFMonitor.Models
@inject NavigationManager NavigationManager
@inject IEntityDependencyCheckerService EntityDependencyCheckerService
@inject IFileObjectService FileObjectService

@attribute [Authorize(Roles = "Administrator")]

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>File Object</h2>
    <hr />
    @if (FileObject is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@FileObject.Name</dd>
        </dl>
        <EditForm method="post" Model="FileObject" OnValidSubmit="DeleteFileObject" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(FileObject is null)">Delete</button> |
            <a href="/fileobjects">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private FileObject? FileObject { get; set; }

    [SupplyParameterFromQuery]
    private string Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        FileObject = await FileObjectService.GetByIdAsync(Id);

        if (FileObject is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteFileObject()
    {
        if (await EntityDependencyCheckerService.CanDelete(FileObject))
        {
            await FileObjectService.DeleteByIdAsync(Id);

            NavigationManager.NavigateTo("/fileobjects");
        }
        else
        {
            throw new ArgumentException("Cannot delete");
        }
    }
}